- name: create ec2 and r53
  hosts: local
  connection: local
  vars:
    ami_id: ami-09c813fb71547fc4f
    sg_id: sg-0edebc35c18e275be # replace with your SG ID
    zone_id: "Z06389611OU10AAAZ9KX3" # replace with your ID
    domain_name: "shivadevops86s.fun"
    instances: 
    # - mongodb
    # - redis
    # - mysql
    # - rabbitmq
  tasks:
  - name: create ec2 instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: t3.micro
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
      tags:
        Name: "{{ item }}"
    loop: "{{ instances }}"
    register: ec2_output

  - name: print the ec2_output
    ansible.builtin.debug:
      msg: "{{ ec2_output }}"

  - name: print public_ip
    ansible.builtin.debug: 
      msg: "{{ item.instances[0].public_ip_address }}"
    loop: "{{ ec2_output.results }}"

  - name: print private_ip
    ansible.builtin.debug: 
      msg: "{{ item.instances[0].private_ip_address }}"
    loop: "{{ ec2_output.results }}"

  - name: create route53 record
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ item.item }}.{{ domain_name }}" # mongodb.shivadevops86s.fun
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      overwrite: true
    loop: "{{ ec2_output.results }}"


# we are creating one record with public only for frontend

  - name: create route53 record
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ domain_name }}" # frontend.shivadevops86s.fun
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      overwrite: true
    when: item.item == "frontend"
    loop: "{{ ec2_output.results }}"


    # ee command tho instance kuda create cheya vachu
    #  ansible-playbook -i inventry.ini 01-ec2-r53.yaml -e "instances=['catalogue','user','cart']"


  #  ansible-playbook -i inventry.ini 01-ec2-r53.yaml -e "instances=['catalogue','user','cart','payment']"